## task1 ###
 Done using python django framework and mysql database
 
 1. creating Dockerfile for DJango
  FROM ubuntu
  maintainer ketansharma587@gmail.com 
  RUN apt-get update
  RUN apt install nano
  RUN apt install python3-pip -y
  RUN apt-get install mysql-client -y
  RUN pip3 install django
  RUN mkdir djangoapp
  RUN cd djangoapp
  RUN django-admin startproject djangoproject .
  RUN cd djangoproject
  CMD python3 manage.py runserver 0.0.0.0:80
  
 2. creating docker-compose.yaml for django image
  version: "3.5"
  services:
   ketan:
    build: .
    container_name: django_cont
    image: django_ubuntu
    ports:
     - "8000:80"
  networks:
     - django_nw
networks:
 django_nw:
  driver: bridge
  
 3. building image and running up the container
    docker-compose up
    
 4. Writing docker compose file for mysql
    version: "3.5"
    services:
     ketan:
      image: mysql
      container_name: mysql2
      command: --default-authentication-plugin=mysql_native_password
      restart: always
      image: mysql
      environment:
          MYSQL_ROOT_PASSWORD: root
      networks:
       - django_nw
    networks:
     django_nw:
      driver: bridge
      
 5. Running up the container
    docker-compose up
    
 6. Configuring setting.py in django container
_________________________________________________________
## task2 ##
## task2 ##
 1. Creating a Dockerfile
  FROM ubuntu
  maintainer ketansharma587@gmail.com
  RUN apt-get update
  RUN apt install nano
  RUN apt install docker.io -y
  
 2. Building image from dockerfile
  sudo docker build -t docker_ubuntu .
  
 3. Creating container
    sudo docker run -it --name docker_ubuntu -v /var/run/docker.sock:/var/run/docker.sock ubuntu bash
    
 4. Running docker command
    docker images
_________________________________________________
## task3 ##

 1.cloning tha git repo
    git clone https://github.com/mdn/beginner-html-site-styled.git
    cd beginner-html-site-styled
    
 2. creating Dockerfile
     from nginx:alpine
     COPY . /usr/share/nginx/html
   
 3. Building the image
     sudo docker build -t ketan24/htmlpage:v1 .
     
 4. pushing the image to docker hub
     sudo docker push  ketan24/htmlpage:v1
     
 5. running the container
     sudo docker run -d --name mymozila -p 80:80 htmlpage:v1
     
 6. pulling watchtower image
    docker pull v2tec/watchtower
    
 7. running watchtower container
     sudo docker run -d   --name watchtower   -v /var/run/docker.sock:/var/run/docker.sock   v2tec/watchtower mymozila
     
 8. comitting changes in index.html and updating the new image on docker hub
     sudo docker build -t ketan24/htmlpage:v1 .
      sudo docker push  ketan24/htmlpage:v1
     
 

    
 

